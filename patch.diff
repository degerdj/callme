diff --git a/CallMeIn.php b/CallMeIn.php
--- a/CallMeIn.php
+++ b/CallMeIn.php
@@ (в самой верхней части файла, сразу после создания HelperFuncs)
-   $helper = new HelperFuncs();
+   $helper = new HelperFuncs();
+   // глобальный объект и конфиг-линии (DID)
+   $globalsObj = Globals::getInstance();
+   $globalsObj->extentions = $helper->getConfig('extentions');
+   $globalsObj->lineNumbers = [];
    $callami = new CallAMI();
@@ (в блоке регистрации NewchannelEvent)
-   $helper->writeToLog($event->getKeys(), 'NewchannelEvent');
+   // сохраняем DID (extension) как LINE_NUMBER для этого звонка
+   $globalsObj->lineNumbers[$event->getUniqueid()] = $event->getExtension();
+   $helper->writeToLog($event->getKeys(), 'NewchannelEvent');
@@ (в блоке обработки DialBeginEvent)
-   // регистрируем звонок в Битриксе
-   $globalsObj->calls[$callUniqueid] = $helper->runInputCall($intNum, $extNum);
+   // получаем ранее сохранённый LINE_NUMBER (DID)
+   $lineNumber = isset($globalsObj->lineNumbers[$callUniqueid])
+       ? $globalsObj->lineNumbers[$callUniqueid]
+       : null;
+   // регистрируем звонок в Битрикс24 с передачей линии
+   $globalsObj->calls[$callUniqueid] = $helper->runInputCall($intNum, $extNum, 2, $lineNumber);

diff --git a/classes/HelperFuncs.php b/classes/HelperFuncs.php
--- a/classes/HelperFuncs.php
+++ b/classes/HelperFuncs.php
@@ -50,7 +50,16 @@ class HelperFuncs {
-    public function runInputCall($exten, $callerid, $type = 2){
+    /**
+     * Регистрирует звонок в Битрикс24, опционально передаёт LINE_NUMBER (DID).
+     *
+     * @param string      $exten Внутренний номер
+     * @param string      $callerid Внешний номер
+     * @param int         $type 1 — исходящий, 2 — входящий
+     * @param string|null $lineNumber DID/Line_number
+     * @return string|null CALL_ID или null
+     */
+    public function runInputCall($exten, $callerid, $type = 2, $lineNumber = null)
     {
         // базовые параметры
         $params = [
@@ -59,8 +68,12 @@ class HelperFuncs {
             'SHOW'             => 0,
         ];
-        // вызываем API
-        $result = $this->getBitrixApi($params, 'telephony.externalcall.register');
+        // если передали LINE_NUMBER — добавляем его
+        if (!empty($lineNumber)) {
+            $params['LINE_NUMBER'] = $lineNumber;
+        }
+        // вызываем API регистрации звонка
+        $result = $this->getBitrixApi($params, 'telephony.externalcall.register');
         $this->writeToLog($params, 'BITRIX register call params');
         $this->writeToLog($result, 'BITRIX register call result');

diff --git a/CallMeOut.php b/CallMeOut.php
--- a/CallMeOut.php
+++ b/CallMeOut.php
@@ (где формируется $callId)
-    // Регистрируем исходящий звонок в Битриксе (без линии)
-    $callId = $helper->runInputCall($internalExt, $externalNumber, 1);
+    // Регистрируем исходящий звонок в Битрикс24, передаём выбранный транк как LINE_NUMBER
+    $callId = $helper->runInputCall($internalExt, $externalNumber, 1, $trunk);

diff --git a/extensions_custom.conf b/extensions_custom.conf
--- a/extensions_custom.conf
+++ b/extensions_custom.conf
@@ [from-trunk-custom]
-    same => n,NoOp(…)
+    same => n,NoOp(Incoming call on DID=${EXTEN})
+    same => n,Set(__LINE_NUMBER=${EXTEN})
+    same => n,AGI(agi://127.0.0.1:4573/CallMeIn.php?USER_PHONE_INNER=${CALLERID(num)}&PHONE_NUMBER=${EXTEN}&TYPE=2&LINE_NUMBER=${LINE_NUMBER})
